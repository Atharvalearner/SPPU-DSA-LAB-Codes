#include<iostream>
using namespace std;
int queue[5];
int front=-1, rear=-1,n=5;
void insertCQ(int val){
	if ((front == 0 && rear == -1) || (front == rear +1)){
		cout<<" Queue overflow \n";
		return;
	}
	if (front == -1){
		front =0;
		rear =0;
	}else{
		if(rear==n-1)
		rear=0;
		else
		rear=rear+1;
	}
	queue [rear]=val;
}
void deleteCQ(){
	if(front==-1){
		cout<<"queue underflow \n ";
		return;
	}
	cout<<"element deleted from queue is: "<<queue[front]<<endl;
	if(front==rear){
		front=-1;
		rear=-1;
	}else{
		if(front==rear)
		front=0;
		else
		front=front +1;
	}
}
void displayCQ_forward(){
		int f=front,r=rear;
		if(front==-1){
			cout<<"Queue is empty"<<endl;
			return;
		}
		cout<<"Queue elements are: \n";
		if(f<=r){
			while(f<=r){
				cout<<queue[f]<<" ";
				f++;
			}
		}
	    else{
		while(f<n-1){
			cout<<queue[f]<<"";
			f++;
		}
		f=0;
		while(f<=r){
			cout<<queue[f]<<"";
			f++;
		}
	}
	cout<<endl;
}
void displayCQ_reverse(){
	int f=front, r=rear;
	if(front==-1){
		cout<<"queue is empty"<<endl;
		return;
	}
	cout<<"queue elements are: \n"<<"";
	if(f<=r){
		while(f<=r){
			cout<<queue[r]<<" ";
			r--;
		}
	}else{
		while(r>=0){
			cout<<queue[r]<<"";
			r--;
		}
		r=n-1;
		while(r>=f){
			cout<<queue[r]<<"";
			r--;
		}
	}
	cout<<endl;	
}
int main(){
	int ch, val;
	cout<<"1.insert \n2.delete \n3.display forward \n4.display reverse \n 5.exit\n";
	do{
		cout<<"enter choice: "<<endl;
		cin>>ch;
		switch(ch){
			case 1: 
				cout<<"input for insertion"<<endl;
				cin>>val;
				insertCQ(val);
				break;
			case 2:
				deleteCQ();
				break;
			case 3:
				displayCQ_forward();
				break;
			case 4:
				displayCQ_reverse();
				break;
			case 5:
				cout<<"exit\n";
				break;
			default :
				cout<<"invalid choice!\n";	
		}
	}
	while(ch!=5);
	return 0;
}
